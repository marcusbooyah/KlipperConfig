[include mainsail.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_18003C0015504D5930393520-if00

[virtual_sdcard]
path: /home/marcusbooyah/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[display_status]
[pause_resume]

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 5000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5

# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_min: 0
position_max: 275
homing_speed: 100
second_homing_speed: 20

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -4
position_min: -25
position_max: 235
homing_speed: 100
second_homing_speed: 20

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 250

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 23.450
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 21.73
#pid_Ki: 1.54
#pid_Kd: 76.55
min_temp: 0
max_temp: 260
max_extrude_only_distance: 450.0

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 50.71
#pid_Ki: 9.88
#pid_Kd: 173.43
min_temp: 0
max_temp: 130

[heater_fan heatbreak_cooling_fan]
pin: PC7

[heater_fan controller_fan]
pin: PB15
heater_temp: 10

[fan]
pin: PC6

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>
    
#####################
######################################################################
# 128x64 Full Graphic Creality CR10 / ENDER 3 stockdisplay
######################################################################

# This section is used for a Creality "12864" display with a single
# ribbon cable between the display's EXP3 plug and the
# micro-controller board's EXP1 connector.

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

[filament_motion_sensor smart_filament_sensor]
detection_length: 25
extruder: extruder
switch_pin: !PC15
runout_gcode: FILAMENT_RUNOUT

[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -47.0
y_offset: -6.5
#z_offset: 3.790
probe_with_touch_mode: true
stow_on_each_sample: false

[bed_mesh]
speed: 80
horizontal_move_z: 6.5
mesh_min: 25, 25
mesh_max: 200, 200
probe_count: 5, 4
algorithm: bicubic

[safe_z_home]
home_xy_position: 160.5, 126.5
speed: 75
z_hop: 10
z_hop_speed: 5

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor pi_temp]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}

    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    M104 S{EXTRUDER_TEMP * 0.6}
    M190 S{BED_TEMP}
    M104 S160; set nozzle temperature
    G28 ; home and auto z align
    BED_MESH_CLEAR ; clears the mesh
    BED_MESH_CALIBRATE; ABL
    BED_MESH_PROFILE SAVE=default1 ; this will save the bed mesh data to the profile 
    BED_MESH_PROFILE LOAD=default1 ; load the default bed mesh profile
    G92 E0.0
    G1 Z5;
    G1 X0 Y0 F3000;
    M109 S{EXTRUDER_TEMP * 0.85}
    G1 E-10.0 F2000; Retract to avoid drizzle
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    G1 X10 Y15 Z0.2 F2000;
    G1 E6.0 F2000; unRetract
    G1 X100 E10 F1500 ; intro line
    G1 X200.0 E10 F1500 ; intro line
    G1 E-0.5 F3000      ; Retract to avoid stringing.
    G1 X190 E0 F1000    ; Wipe back to break string.
    G1 X200 E0 F1000   ; Wipe forward to break string.
    G92 E0.0; reset extruder

[gcode_macro END_PRINT]
gcode:
    ##### calculate save lift position #####
    {% set min_x = printer.toolhead.axis_minimum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if max_z > (act_z + 50) %}
      {% set z_safe = act_z + 50 %}
    {% else %}
      {% set z_safe = max_z %}
    {% endif %}
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    G1 X{min_x} Y{max_y} Z{z_safe} F3000
    # Disable steppers
    M84

[gcode_macro FILAMENT_RUNOUT]
gcode:
    M300 S1 P10
    M600
    M300 S1 P10

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    # SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    # SET_PIN PIN=BEEPER_pin VALUE=0
    
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=M600_state
    
[gcode_macro LOAD_FILAMENT]
gcode:
    G1 E430 F1000
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
    G1 E-450 F1000
    
[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float * 0.8 %}
    {% set y_park = printer.toolhead.axis_maximum.y * 0.8 %}
    {% set z_park_delta = 2.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - z_park_delta) %}
      {% set z_safe = z_park_delta %}
    {% else %}
      {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    {action_respond_info("Parking at %.1f, %.1f, %.1f"% (
              x_park,
              y_park,
              z_safe))}
    {% if printer.extruder.can_extrude|lower == 'true' %}
      M83
      G1 E-{extrude} F2100
      {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G91
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
      {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
    {% if printer["gcode_macro status_ready"] != null %}
      status_ready
    {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.870
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.205000, -0.152500, -0.075000, -0.087500, -0.052500
#*# 	-0.132500, -0.142500, -0.027500, -0.005000, 0.037500
#*# 	-0.122500, -0.082500, 0.012500, 0.055000, 0.067500
#*# 	-0.142500, -0.152500, -0.010000, 0.057500, 0.092500
#*# x_count = 5
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 200.0
#*# min_y = 25.0
#*# max_y = 199.99
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.423
#*# pid_ki = 1.392
#*# pid_kd = 107.157
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.387
#*# pid_ki = 2.164
#*# pid_kd = 605.335
#*#
#*# [bed_mesh default1]
#*# version = 1
#*# points =
#*# 	-0.205000, -0.152500, -0.075000, -0.087500, -0.052500
#*# 	-0.132500, -0.142500, -0.027500, -0.005000, 0.037500
#*# 	-0.122500, -0.082500, 0.012500, 0.055000, 0.067500
#*# 	-0.142500, -0.152500, -0.010000, 0.057500, 0.092500
#*# x_count = 5
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 200.0
#*# min_y = 25.0
#*# max_y = 199.99
